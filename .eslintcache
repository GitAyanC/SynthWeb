[{"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\reportWebVitals.js":"1","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\Synthesizer.js":"2","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\static\\initialization\\InitialState.js":"3","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\index.js":"4","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\alert.js":"5","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\types.js":"6","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\index.js":"7","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\AudioContext.js":"8","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\BaseContext.js":"9","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\store.js":"10","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\audioNodeManager.js":"11","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\nodemanager\\InitializeNodeManager.js":"12","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\AudioNodeManager.js":"13","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\Oscillator.js":"14","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\EntityNode.js":"15","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\FxChain.js":"16","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\audioNodeManager.js":"17","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\Types.js":"18","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\static\\Errors.js":"19","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\EntityNodeFactory.js":"20","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\App.js":"21","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\nodemanager\\Structure.js":"22","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\AudioWrapper.js":"23","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\Default.js":"24","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\Gain.js":"25","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\activeState.js":"26","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\ResponsiveTransform.js":"27","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\Home.js":"28","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\Uploader.js":"29","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\ExploreDefault.js":"30","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\values.js":"31","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\AudioGraph.js":"32","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\NodeValueChanger.js":"33","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\InputCutOff.js":"34","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\Compile.js":"35","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\combinedActions.js":"36","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\OscillatorOne.js":"37","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\AudioProperties.js":"38","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\audio\\Oscillator.js":"39","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\Keyboard.js":"40","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\Spinner.js":"41","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\values.js":"42","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\GraphPlotter.js":"43","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\audio\\Gain.js":"44","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\activeState.js":"45","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\Keys.js":"46","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\static\\keyBindings.js":"47","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\InputManager.js":"48","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\PlayableOscillator.js":"49","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\assets\\ui\\components\\Knob.js":"50","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\audio\\PlayableOscillator.js":"51"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"53"},{"size":9925,"mtime":1607535380080,"results":"54","hashOfConfig":"53"},{"size":553,"mtime":1606233965712,"results":"55","hashOfConfig":"53"},{"size":457,"mtime":1606182239908,"results":"56","hashOfConfig":"53"},{"size":416,"mtime":1606185186956,"results":"57","hashOfConfig":"53"},{"size":940,"mtime":1606562312512,"results":"58","hashOfConfig":"53"},{"size":332,"mtime":1606561896901,"results":"59","hashOfConfig":"53"},{"size":2903,"mtime":1606874222089,"results":"60","hashOfConfig":"53"},{"size":453,"mtime":1606546144365,"results":"61","hashOfConfig":"53"},{"size":417,"mtime":1606234882440,"results":"62","hashOfConfig":"53"},{"size":787,"mtime":1606562130331,"results":"63","hashOfConfig":"53"},{"size":6375,"mtime":1607097643580,"results":"64","hashOfConfig":"53"},{"size":3406,"mtime":1607120770396,"results":"65","hashOfConfig":"53"},{"size":3827,"mtime":1606880941272,"results":"66","hashOfConfig":"53"},{"size":3081,"mtime":1607097885686,"results":"67","hashOfConfig":"53"},{"size":4166,"mtime":1606474665792,"results":"68","hashOfConfig":"53"},{"size":735,"mtime":1606791632959,"results":"69","hashOfConfig":"53"},{"size":829,"mtime":1607534376219,"results":"70","hashOfConfig":"53"},{"size":2614,"mtime":1607447112186,"results":"71","hashOfConfig":"53"},{"size":1508,"mtime":1607097274864,"results":"72","hashOfConfig":"53"},{"size":363,"mtime":1606232820320,"results":"73","hashOfConfig":"53"},{"size":5311,"mtime":1607096639189,"results":"74","hashOfConfig":"53"},{"size":2124,"mtime":1607092189097,"results":"75","hashOfConfig":"53"},{"size":540,"mtime":1607093150573,"results":"76","hashOfConfig":"53"},{"size":1753,"mtime":1606881339087,"results":"77","hashOfConfig":"53"},{"size":678,"mtime":1606561007089,"results":"78","hashOfConfig":"53"},{"size":1467,"mtime":1606874198167,"results":"79","hashOfConfig":"53"},{"size":516,"mtime":1606569907192,"results":"80","hashOfConfig":"53"},{"size":221,"mtime":1606560999218,"results":"81","hashOfConfig":"53"},{"size":928,"mtime":1606791169776,"results":"82","hashOfConfig":"53"},{"size":2780,"mtime":1606816948689,"results":"83","hashOfConfig":"53"},{"size":640,"mtime":1606874114304,"results":"84","hashOfConfig":"53"},{"size":1126,"mtime":1606874324759,"results":"85","hashOfConfig":"53"},{"size":643,"mtime":1607120782945,"results":"86","hashOfConfig":"53"},{"size":1194,"mtime":1606574215621,"results":"87","hashOfConfig":"53"},{"size":873,"mtime":1606817012392,"results":"88","hashOfConfig":"53"},{"size":3666,"mtime":1606561013535,"results":"89","hashOfConfig":"53"},{"size":2135,"mtime":1607536971396,"results":"90","hashOfConfig":"53"},{"size":1807,"mtime":1606791068636,"results":"91","hashOfConfig":"53"},{"size":1990,"mtime":1607097125101,"results":"92","hashOfConfig":"53"},{"size":218,"mtime":1606563292715,"results":"93","hashOfConfig":"53"},{"size":1819,"mtime":1606561876210,"results":"94","hashOfConfig":"53"},{"size":3074,"mtime":1607120520313,"results":"95","hashOfConfig":"53"},{"size":1736,"mtime":1606791095105,"results":"96","hashOfConfig":"53"},{"size":436,"mtime":1606791611673,"results":"97","hashOfConfig":"53"},{"size":333,"mtime":1607097049431,"results":"98","hashOfConfig":"53"},{"size":292,"mtime":1606879400598,"results":"99","hashOfConfig":"53"},{"size":1804,"mtime":1607120691748,"results":"100","hashOfConfig":"53"},{"size":4360,"mtime":1607535198328,"results":"101","hashOfConfig":"53"},{"size":4850,"mtime":1607536445424,"results":"102","hashOfConfig":"53"},{"size":2384,"mtime":1607536937694,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vita73",{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"132"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"158"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\reportWebVitals.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\Synthesizer.js",["228","229"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\static\\initialization\\InitialState.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\index.js",[],["230","231"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\alert.js",["232"],"import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst initialState = [\r\n\r\n];\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert=> alert.id !== payload.id);\r\n        default:\r\n            return state; \r\n    }\r\n}","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\types.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\AudioContext.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\BaseContext.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\store.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\audioNodeManager.js",["233"],"import {\r\n    CHANGE_ANM_ADJACENCYLIST, \r\n    CHANGE_ANM_NODESTRUCTURE,\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    nodeStructure : [],\r\n    adjacencyList : [],\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    console.log(`Accessed AudioNodeManagerReducer> Type: ${type} Payload: ${payload}`); //TODO: Remove Logs\r\n\r\n    switch(type){\r\n        case CHANGE_ANM_NODESTRUCTURE:\r\n            return {\r\n                ...state,\r\n                nodeStructure : payload.nodeStructure ?? []\r\n            };\r\n        case CHANGE_ANM_ADJACENCYLIST:\r\n            return {\r\n                ...state,\r\n                adjacencyList : payload.adjacencyList ?? []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\nodemanager\\InitializeNodeManager.js",["234"],"import AudioNodeManager from './../AudioNodeManager';\r\nimport { ThrowAudioNodeManagerInitializationException } from './../../../static/Errors';\r\nimport Structure from './Structure';\r\nimport EntityNodeFactory from './../EntityNodeFactory';\r\nimport { OUTPUT } from '../Types';\r\nimport InputManager from '../InputManager';\r\n/**\r\n * @todo Expose Functionality for Redux State and USer Input state for their graphs\r\n * @param {AudioNodeManager} anm\r\n * @param {Object} informationStructure \r\n */\r\nexport const Initialize = (anm, informationStructure = null) => {\r\n\r\n    if(!(anm instanceof AudioNodeManager)){\r\n        ThrowAudioNodeManagerInitializationException();\r\n    }\r\n\r\n    //Set NodeStructure and AdjacencyList to ANM if proper. \r\n    //Do a shallow check of current and new input NodeStructure\r\n    // (for keys, not values) has changed in ANM for validating structure again\r\n\r\n    //Do the same for AdjacencyList, and if has changed call Initialize again\r\n    const structure = ValidateStructure(informationStructure);\r\n\r\n    anm.NodeStructure = structure.NodeStructure; //Array \r\n    anm.AdjacencyList = structure.AdjacencyList; //Array\r\n\r\n    console.log(`Working Initialization ANM. Init Structure ${structure}`);\r\n\r\n    //Clear\r\n    anm.NodeMap.clear();\r\n    anm.GraphNodes.length = 0;\r\n    anm.GraphLinks.length = 0;\r\n\r\n    //Set NodeMap\r\n    anm.NodeStructure.forEach((item, index) => {\r\n\r\n        let entityNode = EntityNodeFactory.createNode(anm.Context)(item);\r\n\r\n        //Add EntityNode to NodeMap\r\n        anm.NodeMap.set(item.name, entityNode);\r\n\r\n        //Add Unique Name for Graph Plotting\r\n        anm.GraphNodes.unshift({\r\n            id : item.name\r\n        });\r\n\r\n        //Check for Playable Inputs\r\n        let playableInfo = entityNode.getPlayableInfo();\r\n        if(playableInfo){\r\n            anm.InputManager.addPlayableFunction(playableInfo[0]);\r\n            anm.InputManager.addStoppableFunction(playableInfo[1]);\r\n        }\r\n    });\r\n\r\n    anm.GraphNodes.unshift({\r\n        id : OUTPUT\r\n    });\r\n\r\n    //Connect New Nodes inside the NodeMap\r\n    anm.AdjacencyList.forEach((item, index) => {\r\n        let nodeName = Object.keys(item)[0];\r\n\r\n        let currentEntityNode = anm.NodeMap.get(nodeName);\r\n\r\n        item[nodeName].forEach((toConnectItem, toConnectIndex) => {\r\n            const {\r\n                name, property\r\n            } = toConnectItem;\r\n\r\n            if(name === OUTPUT){\r\n                currentEntityNode.connectTo()(anm.Context.getAudioContext().destination);\r\n            }else{\r\n                let toConnectNode = anm.NodeMap.get(name);\r\n                currentEntityNode.connectTo()(toConnectNode.getNodeToConnect(property));\r\n            }\r\n\r\n            anm.GraphLinks.unshift({\r\n                source : nodeName,\r\n                target : name\r\n            });\r\n        });\r\n    });\r\n\r\n    console.log('Initialized successfully!');\r\n}\r\n\r\n/**\r\n * \r\n * @param {Object} informationStructure Complex Object describing the NodeStructure and AdjacencyList\r\n * @returns {Structure} A New structure with Validations\r\n */\r\nexport const ValidateStructure = (informationStructure) => {\r\n    try{\r\n        if(informationStructure)\r\n        {\r\n            const {\r\n                NodeStructure,\r\n                AdjacencyList\r\n            } = informationStructure;\r\n\r\n            if(NodeStructure.length > 0 && AdjacencyList.length > 0){\r\n                return new Structure(NodeStructure, AdjacencyList);\r\n            }else{\r\n                return new Structure();\r\n            }\r\n        }else\r\n        {\r\n            return new Structure();\r\n        }\r\n    }\r\n    catch(err)\r\n    {\r\n        ThrowAudioNodeManagerInitializationException(err);\r\n    }\r\n}\r\n\r\n//To be fed to Initialize late run so that it \r\n    //doesn't depend on a static structure.\r\n    //This structure will eventually be changed by the user inputs\r\n    //There will be no mentality of individual React components for each count and type of node..\r\n\r\n    //They Keyboard is the only things which will fire Key Handlers.\r\n    //Based on those, the starting oscillators will play.\r\n\r\n    //Therefore, in a way, each AudioNode wrapper classes will need to carry a state, so that when \r\n    //dumb components request the ANM via a name, in O(1)  the resultant state should be given\r\n\r\n    //Changing values of an AudioNode's state shouldn't cause a compilation.\r\n    //\r\n    //It's changing the Adjacency list ; so that connections can be remade. \r\n\r\n    //Redux should store the state values of all the nodes, (Apart from the ones which will change\r\n    //on the Keyboard's command)\r\n    //Redux should also store the Adjacency List and also, a component should subscribe to\r\n    //this part of the the state (i.e the adjacency list) so that whenever it changes from the User Graph\r\n    //, the re-compilation should be able to fire. (Probably the Keyboard component, because, we won't allow users\r\n    //to play the Keyboard and start the root oscillators, if the compilation is not done.)\r\n\r\n    //If a suser wants to change the properties of an Audio Node, like changin a Gain which he added,\r\n    //Then it's apparent that On clicking on that graph node, we will be able to toggle the visibility\r\n    //Of a component. (i.e dispatch a state change to redux fetching the current state from ANM)\r\n    //To toggle the visibility of that component, There should be a redux state called active : \r\n    // { name: GAINONE } that remains null if Keyboard is shown and if the state changes, the componenet shows up\r\n    //rendering the state of the named AudioNode. It should contain the properties also.\r\n    //However, again this won't trigger a re-render\r\n    /*\r\n        active : {\r\n            name : UserGivenName,\r\n            type : Oscillator,\r\n            description : \"Some desciption\"\r\n            properties : {\r\n                gain: 20,\r\n                linearRampValue:\r\n                linearRampDifference:\r\n            }\r\n        }\r\n\r\n        The question is, do we need a UUID?\r\n        Really though, I don't think So for now. \r\n\r\n        //Any properties mentioned need to be exposed by the Audio Node, and during Connect,\r\n        // we should make sure that if an audio node needs to connect not to the node, but \r\n        // a property of the node for modulation, we should be able to do it\r\n\r\n    */\r\n    //Make OUTPUT Node constant",["235","236"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\AudioNodeManager.js",["237"],"import BaseContext from './BaseContext';\r\nimport { Initialize } from './nodemanager/InitializeNodeManager';\r\nimport EntityNode from './EntityNode';\r\nimport { \r\n    ThrowNodeChangeStateFailedException,\r\n    ThrowFetchActiveStateFailedException,\r\n    ThrowAudioNodeManagerInitializationException\r\n} from '../../static/Errors';\r\nimport InputManager from './InputManager';\r\n\r\nexport default class AudioNodeManager {\r\n\r\n    constructor() {\r\n        this.Context = new BaseContext();\r\n\r\n        /**\r\n         * @type {Map<string, EntityNode>} Key: unique name as string Value: EntityNode \r\n         */\r\n        this.NodeMap = new Map();\r\n        this.NodeStructure = [];\r\n        this.AdjacencyList = [];\r\n        this.GraphNodes = [];\r\n        this.GraphLinks = [];\r\n        this.InputManager = new InputManager();\r\n    }\r\n  \r\n    /**\r\n     * Initializes Audio Manager from scratch. \r\n     * @param {Array} NodeStructure \r\n     * @param {Array} AdjacencyList \r\n     */\r\n    initializeAudioNodeManager(NodeStructure = [], AdjacencyList = []){\r\n        try{\r\n            Initialize(this, {\r\n                NodeStructure,\r\n                AdjacencyList\r\n            });\r\n        }catch(err){\r\n            ThrowAudioNodeManagerInitializationException(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current Information Structure from ANM. \r\n     * @returns {{NodeStructure : Array, AdjacencyList : Array}}\r\n     */\r\n    getInformationStructure(){\r\n        return {\r\n            NodeStructure : this.NodeStructure,\r\n            AdjacencyList : this.AdjacencyList\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns the current Graphical Information Structure from ANM. \r\n     * @returns {{nodes : Array, links : Array}}\r\n     */\r\n    getGraphicalData(){\r\n        return {\r\n            nodes : this.GraphNodes,\r\n            links : this.GraphLinks\r\n        };\r\n    }\r\n\r\n    /**\r\n     * The Node Value Changer will call this. It has gotten the changed activeState.details from Redux store.\r\n     * @param {Object} activeStateDetails \r\n     */\r\n    changeNodeValues(activeStateDetails){\r\n        try{\r\n            const { name } = activeStateDetails;\r\n            this.NodeMap.get(name).performFunction((node) => {\r\n                node.changeStateDetails(activeStateDetails);\r\n            })\r\n        }catch(err){\r\n            ThrowNodeChangeStateFailedException(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the active state details of the supplied node Name\r\n     * @param {string} nodeName \r\n     * @returns {Object} activeStateDetails\r\n     */\r\n    fetchNodeActiveState(nodeName){\r\n        try{\r\n            return this.NodeMap.get(nodeName).fetchDetails();\r\n        }catch(err){\r\n            ThrowFetchActiveStateFailedException(err);\r\n        }\r\n    }    \r\n\r\n    /**\r\n     * To be fired from the Keyboard\r\n     * @todo Create an Observer pattern. Have AudioNodeManager store an array of functions to perform whenever startAll is played.\r\n     * @param {Object} keyboardInputs \r\n     */\r\n    play(freq){\r\n        this.InputManager.addFrequency(freq);\r\n    }\r\n\r\n    /**\r\n     * Stops all Inputs with the freq\r\n     */\r\n    stop(freq){\r\n        this.InputManager.removeFrequency(freq);\r\n    }\r\n\r\n    /**\r\n     * forceStops all playable actions.\r\n     * @description Mostly used when triggered from InputCutoff on ShowKeyboard false\r\n     */\r\n    forceStop(){\r\n        this.InputManager.forceStop();\r\n    }\r\n}","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\Oscillator.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\EntityNode.js",["238"],"import { v4 as uuidv4 } from 'uuid';\r\nimport AudioWrapper from './audio/AudioWrapper';\r\nimport {\r\n    ThrowPerformOnAudioWrapperException,\r\n    ThrowInvalidPropertyToConnectException,\r\n    ThrowConnectionFailedException\r\n} from './../../static/Errors';\r\nimport { PLAYABLE } from './Types';\r\n\r\nexport default class EntityNode {\r\n\r\n    /**\r\n     * Accepts the name, type, description and an extended AudioWrapper as an object\r\n     * @param {Object} entityDetails \r\n     */\r\n    constructor(entityDetails){\r\n        const {\r\n            name,\r\n            type,\r\n            description,\r\n            entity\r\n        } = entityDetails;\r\n\r\n        this.Id = uuidv4();\r\n        this.name = name;\r\n        this.type = type;\r\n\r\n        /**\r\n         * @type {AudioWrapper} Refers to an Audio Class (Oscillator/Gain etc)\r\n         */\r\n        this.entity = entity;\r\n        this.description = description;\r\n        this.playable = type.toString().includes(PLAYABLE);\r\n    }\r\n\r\n    /**\r\n     * Returns the UUID of the EntityNode\r\n     * @returns {string} UUID\r\n     */\r\n    getId(){\r\n        return this.Id;\r\n    }\r\n\r\n    /**\r\n     * Checks if the belonging AudioNode has play(input) and stop() defined.\r\n     * @returns {Array} [ playFunction, stopFunction ]\r\n     */\r\n    getPlayableInfo(){\r\n        if(this.playable){\r\n            return [ this.entity.play, this.entity.stop ];\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Perform a function on the classes extended by Audio Wrapper. \r\n     * @todo Search JSDoc to check how to make AudioWrapper appear base class.\r\n     * @typedef { (node: AudioWrapper) => void } CallFunction \r\n     * @param {CallFunction} f - A function which accepts a single node parameter\r\n     */\r\n    performFunction(f){\r\n        try{\r\n            f(this.entity);\r\n        }catch(err){\r\n            ThrowPerformOnAudioWrapperException(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns {Function} To Connect to the Node\r\n     */\r\n    connectTo(){\r\n        return (audioParamOrNode) => {\r\n            try{\r\n                this.entity.connect(audioParamOrNode);\r\n            }catch(err){\r\n                ThrowConnectionFailedException(`while trying to connect ${this.name} : ${err}`)\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @returns {(AudioParam | AudioNode)}\r\n     */\r\n    getNodeToConnect(property){\r\n        if(property){\r\n            if(this.entity.getAvailableConnects().includes(property)){\r\n                return this.entity.audioNode.property;\r\n            }else{\r\n                ThrowInvalidPropertyToConnectException(`property ${property} of ${this.name} is not present`);\r\n            }\r\n        }else{\r\n            return this.entity.audioNode;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the activeStateDetails of the current EntityNode\r\n     * @returns {Object} \r\n     */\r\n    fetchDetails(){\r\n        return {\r\n            name : this.name,\r\n            type : this.type,\r\n            description : this.description,\r\n            properties : this.entity.fetchStateDetails()\r\n        }\r\n    }\r\n}","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\FxChain.js",["239","240","241","242","243","244","245","246","247","248","249"],"import EntityNodeFactory from './EntityNodeFactory';\r\nimport { \r\n    ThrowNodeUUIDNotFoundException, \r\n    ThrowScrambledCompilationOrderException, \r\n    ThrowUnidentifiedFXChainKeyException,\r\n    ThrowUnidentifiedNodeTypeAccessException \r\n} from '../../static/Errors';\r\nimport {\r\n    BIQUADFILTER, CONVOLVER, GAIN, DELAY, DYNAMICSCOMPRESSOR, OSCILLATOR, WAVESHAPER\r\n} from './Types';\r\nimport BaseContext from './BaseContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport EntityNode from './EntityNode';\r\n\r\nexport default class FxChain {\r\n\r\n    /**\r\n     * \r\n     * @param {string} str\r\n     * @description Initializes an FxChain with the given Id \r\n     * @example str could be FX1 or FX2 \r\n     */\r\n    constructor(str){\r\n        this.FxChainId = str;\r\n        this.NodeFactory = new EntityNodeFactory();\r\n        this.TypeIdMap = {\r\n            //Type : UUID\r\n        }\r\n        this.EntityIdMap = {\r\n            //uuid : some EntityNode having our classes in AudioNode\r\n        };\r\n        this.MapEntitiesWithOrder = {\r\n            //1 : uuid\r\n        };\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {BaseContext} Context\r\n     * @description Initializes the FxChain \r\n     */\r\n    initialize(Context) {\r\n        var osc = this.NodeFactory.createNode(Context)(OSCILLATOR);\r\n        let id = osc.getId();\r\n        this.EntityIdMap[id] = osc;\r\n        this.MapEntitiesWithOrder[0] = id;\r\n        this.TypeIdMap[OSCILLATOR] = id;\r\n    }\r\n  \r\n    /**\r\n     * @param {BaseContext} Context \r\n     * @description Compiles the FxChain\r\n     */\r\n    compile(Context){\r\n        try{\r\n            this.disconnectNodes();\r\n\r\n            let previousOrder = 0;\r\n            let previousEntity = null;\r\n\r\n            Object.entries(this.MapEntitiesWithOrder).forEach(([keyOrder, valueId]) => {\r\n                if (keyOrder >= previousOrder){\r\n                    let currentEntity = this.EntityIdMap[valueId];\r\n                    if (previousEntity){\r\n                        previousEntity.performFunctionOnNode((previousNode) => {\r\n                            previousNode.connect(currentEntity.getAudioNode());\r\n                        });\r\n                    }\r\n                    previousEntity = currentEntity;\r\n                    previousOrder = keyOrder;\r\n                }\r\n            });\r\n\r\n            previousEntity.performFunctionOnNode((previousNode) => {\r\n                previousNode.connect(Context.getAudioContext().destination);\r\n            });\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Disconnects all nodes\r\n     * @returns {void}\r\n     */\r\n    disconnectNodes(){\r\n        Object.entries(this.EntityIdMap).forEach(([key, entity]) => {\r\n            entity.performFunctionOnNode((node) => {\r\n                node.disconnect();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @returns {Object} Object\r\n     * @description Returns the FxChain's Map of Order to UUID\r\n     * @example return { 1 : uuid } \r\n     */\r\n    getOrder(){\r\n        return this.MapEntitiesWithOrder;\r\n    }\r\n\r\n    updateOrder(){\r\n        return (mappedOrder) => {\r\n            //TODO: This will be fired whenever an FX Chain order has been fired\r\n\r\n            // mappedOrder = {\r\n            //     1 : uuid2,\r\n            //     2 : uuid1,\r\n            //     3 : uuid3\r\n            // }\r\n\r\n            this.MapEntitiesWithOrder = mappedOrder;\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * \r\n     * @returns { (uuid:string) =>  EntityNode.performFunctionOnNode }  }\r\n     * @description Returns function which accepts uuid and returns \r\n     * performFunctionOnNode() from mapped EntityNode\r\n    */\r\n    performFunction(){\r\n        return (uuidId) => {\r\n            try{\r\n                return this.EntityIdMap[uuidId].performFunctionOnNode;\r\n            }catch(err){\r\n                ThrowNodeUUIDNotFoundException(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} nodeType\r\n     *  \r\n     */\r\n    getIdForType(nodeType){\r\n        try{\r\n            return this.TypeIdMap[nodeType];\r\n        }catch(err){\r\n            ThrowUnidentifiedNodeTypeAccessException(err);\r\n        }\r\n    }\r\n}",["250","251"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\audioNodeManager.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\Types.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\static\\Errors.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\EntityNodeFactory.js",["252","253","254","255","256","257"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\App.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\nodemanager\\Structure.js",["258","259","260","261","262","263","264","265","266","267"],"import { ThrowUnidentifiedFXChainKeyException } from '../../../static/Errors';\r\nimport {\r\n    OSCILLATOR,\r\n    PLAYABLE_OSCILLATOR,\r\n    CONVOLVER,\r\n    DELAY,\r\n    DYNAMICSCOMPRESSOR,\r\n    GAIN,\r\n    STEREOPANNER,\r\n    WAVESHAPER,\r\n    ANALYSER,\r\n    OSC_TYPE_TRIANGLE,\r\n    OSC_TYPE_SINE,\r\n    OSC_TYPE_SQUARE,\r\n    LFO_OSCILLATOR,\r\n    OUTPUT,\r\n} from '../Types';\r\n\r\nexport default class Structure{\r\n\r\n    initialNodeStructure = [\r\n        {\r\n            name: \"OSC1\",\r\n            type: PLAYABLE_OSCILLATOR,\r\n            description: \"My starting Oscillator\",\r\n            properties: {\r\n                type: OSC_TYPE_TRIANGLE, \r\n                frequency: 130.8,\r\n                detune: 0,\r\n                //Any other properties\r\n            }\r\n        },\r\n        {\r\n            name: \"OSC2\",\r\n            type: PLAYABLE_OSCILLATOR,\r\n            description: \"My second starting Oscillator\",\r\n            properties: {\r\n                type: OSC_TYPE_SINE, \r\n                frequency: 400.8,\r\n                detune: 0,\r\n                //Any other properties\r\n            }\r\n        },\r\n        {\r\n            name: \"OSC1Gain\",\r\n            type: GAIN,\r\n            description: \"My Oscillator Gain\",\r\n            properties: {\r\n                gain: 100\r\n                //Any other properties\r\n            }\r\n        },\r\n        {\r\n            name: \"OSC2Gain\",\r\n            type: GAIN,\r\n            description: \"My Oscillator2 Gain\",\r\n            properties: {\r\n                gain: 50\r\n                //Any other properties\r\n            }\r\n        }\r\n    ]\r\n\r\n    initialAdjacencyList = [\r\n        {\r\n            \"OSC1\" : [ \r\n                {\r\n                    name : \"OSC1Gain\",\r\n                    property : null //Is Property is null, it's connecting to the node\r\n                } \r\n            ]\r\n        },\r\n        {\r\n            \"OSC2\" : [ \r\n                {\r\n                    name : \"OSC2Gain\",\r\n                    property : null\r\n                } \r\n            ]\r\n        },\r\n        {\r\n            \"OSC1Gain\" : [\r\n                {\r\n                    name : OUTPUT,\r\n                    property : null\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"OSC2Gain\" : [\r\n                {\r\n                    name : OUTPUT,\r\n                    property : null\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    /**\r\n     * \r\n     * @param {Array} NodeStructure \r\n     * @param {Array} AdjacencyList\r\n     * @returns A Structure Object containing validated inputs\r\n     * @description Should be encased with try-catch wherever initialied, so that Validation could throw error\r\n     */\r\n    constructor(NodeStructure = null, AdjacencyList = null){\r\n        this.NodeStructure = NodeStructure ?? this.initialNodeStructure;\r\n        this.AdjacencyList = AdjacencyList ?? this.initialAdjacencyList;\r\n        \r\n        this.ValidateInputs(this.NodeStructure, this.AdjacencyList);\r\n\r\n        console.log(`Fetched Node State Array[]: ${this.NodeStructure}`);\r\n        console.log(`Fetched Adjacency List Array[]: ${this.AdjacencyList}`);\r\n    }\r\n\r\n    /**\r\n     * @todo Throw Exceptions for the following:\r\n     * 0) Check if any of them are empty or having missing keys (ex: type is not given)\r\n     * 1) If Adjacency List contains the name of a Node which doesn't occur in NodeStructure and is also not const OUTPUT\r\n     * 2) If Adjacency List mentions invalid property keys or values, (Negative Integers/Bad Strings etc)\r\n     * 3) Basically make sure eveything is okay in a nutshell, since this is the only time when outside user input will be scanned\r\n     * @param {Array} NodeStructure \r\n     * @param {Array} AdjacencyList \r\n     */\r\n    ValidateInputs(NodeStructure, AdjacencyList){\r\n        \r\n    }\r\n}\r\n\r\n\r\n// const createStructure = () => {\r\n//     /*\r\n//         Creating an oscillator means creating a gain with it.\r\n\r\n//         For now, we can go ahead with FX! and FX2, but ideally, no chain seperation should be present\r\n\r\n\r\n//         OSCILLATOR (OSC1) -> GAIN (OSC1GAIN) -> GAIN (LFOGAIN) -> OUTPUT   \r\n//         OSC2\r\n\r\n\r\n//     */\r\n// }\r\n\r\n// var context = new AudioContext();\r\n\r\n// function osc(type, frequency , detune){\r\n//     this.type = type;\r\n//     this.frequency = frequency;\r\n//     this.detune = detune;\r\n    \r\n//     this.oscillator = context.createOscillator();\r\n//     this.gain = context.createGain();\r\n//     this.oscillator.frequency.value = frequency;\r\n//     this.oscillator.type = type;\r\n//     this.oscillator.detune.value = detune;\r\n    \r\n//     this.play = function(destination , volume){\r\n//     this.destination = destination;\r\n//     this.volume = volume;\r\n//     this.oscillator.connect(this.gain);\r\n//     this.gain.gain.value = volume;\r\n//     this.gain.connect(destination);\r\n//     this.oscillator.start(0);\r\n//     };\r\n    \r\n//     this.stop = function(){\r\n//     this.oscillator.stop(0);\r\n//     }\r\n    \r\n    \r\n    \r\n// }\r\n// /*\r\n// osc.prototype.play = function(){\r\n//     oscillator.connect(context.destination);\r\n//     oscillator.noteOn(0);\r\n// };\r\n// */\r\n// osctest = new osc(\"sine\",400,0);\r\n// osctest.play(context.destination , 0.9);\r\n\r\n\r\n// osctest2 = new osc(\"sawtooth\", 6 , 0);\r\n// osctest2.play(osctest.oscillator.frequency , 1000);\r\n\r\n// //osctest.stop();\r\n// //osctest2.stop();",["268","269"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\AudioWrapper.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\Default.js",["270"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\Gain.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\activeState.js",["271"],"import {\r\n    CHANGE_ACTIVE_STATE, REMOVE_ACTIVE_STATE\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    details : null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    console.log(`Accessed ActiveStateReducer> Type: ${type} Payload: ${payload}`); //TODO: Remove Logs\r\n\r\n    switch(type){\r\n        case CHANGE_ACTIVE_STATE:\r\n            return {\r\n                ...state,\r\n                details : payload.details\r\n            };\r\n        case REMOVE_ACTIVE_STATE:\r\n            return {\r\n                ...state,\r\n                details : null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\ResponsiveTransform.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\Home.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\Uploader.js",["272"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Uploader = props => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nUploader.propTypes = {\r\n\r\n}\r\n\r\nexport default Uploader\r\n","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\ExploreDefault.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\values.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\AudioGraph.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\NodeValueChanger.js",["273"],"import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    updateHasValuesChanged\r\n} from './../../../../redux/actions/values';\r\n\r\nconst NodeValueChanger = ({\r\n    anm,\r\n    updateHasValuesChanged,\r\n    hasValuesChanged,\r\n    activeStateDetails\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        if(hasValuesChanged){\r\n            anm.current.changeNodeValues(activeStateDetails);\r\n            updateHasValuesChanged(false);\r\n        }\r\n    }, [anm, hasValuesChanged])\r\n\r\n    return (\r\n        <Fragment>\r\n            NodeValueChanger :)\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nNodeValueChanger.propTypes = {\r\n    anm : PropTypes.object.isRequired,\r\n    hasValuesChanged : PropTypes.bool.isRequired,\r\n    updateHasValuesChanged : PropTypes.func.isRequired,\r\n    //Since activeStateDetails could be null\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    hasValuesChanged : state.values.hasValuesChanged,\r\n    activeStateDetails : state.activeState.details\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateHasValuesChanged\r\n})(NodeValueChanger)\r\n","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\InputCutOff.js",[],["274","275"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\Compile.js",["276"],"import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    compile\r\n} from './../../../../redux/actions/combinedActions';\r\n\r\nconst Compile = ({\r\n    anm,\r\n    nodeStructure,\r\n    adjacencyList,\r\n    hasCompiled,\r\n    compile\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        if(!hasCompiled && nodeStructure.length > 0 && adjacencyList.length > 0){\r\n            anm.current.initializeAudioNodeManager(nodeStructure, adjacencyList);\r\n            compile();\r\n        }\r\n    }, [anm, hasCompiled])\r\n\r\n    return (\r\n        <Fragment>\r\n            Compile :D\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCompile.propTypes = {\r\n    anm : PropTypes.object.isRequired,\r\n    nodeStructure : PropTypes.array.isRequired,\r\n    adjacencyList : PropTypes.array.isRequired,\r\n    hasCompiled : PropTypes.bool.isRequired,\r\n    compile : PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    nodeStructure : state.audioNodeManager.nodeStructure,\r\n    adjacencyList : state.audioNodeManager.adjacencyList,\r\n    hasCompiled : state.values.hasCompiled \r\n});\r\n\r\nexport default connect(mapStateToProps, { compile })(Compile);\r\n","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\combinedActions.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\OscillatorOne.js",["277","278","279","280","281","282","283"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\AudioProperties.js",["284"],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\audio\\Oscillator.js",["285","286"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Oscillator = ({\r\n    stateDetails,\r\n    fireOnUnMount\r\n}) => {\r\n\r\n    const {\r\n        name,\r\n        type,\r\n        description,\r\n        properties\r\n    } = stateDetails;\r\n\r\n    const [stateProperties, changeProperties] = useState(properties);\r\n    \r\n    useEffect(() => {\r\n        return () => {\r\n            fireOnUnMount();\r\n        }\r\n    }, [fireOnUnMount])\r\n\r\n    const changeValues = (e) => {\r\n        changeProperties({\r\n            ...stateProperties,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //Dump Component = Show purposes from props\r\n    return (\r\n        <Fragment>\r\n            <hr/>\r\n            Showing {name} | What is it? : {description}\r\n            Check Oscillator for more info: TODO: Provide Link <br/>\r\n            //Ideally Create Dumb Components and pass them the event handlers as props.\r\n            Frequency: {stateProperties.frequency} <br/>\r\n            <input  \r\n\t\t\t    type=\"range\" \r\n\t\t\t    name=\"frequency\"\r\n\t\t\t    value={stateProperties.frequency}\r\n\t\t\t    onInput={(e) => changeValues(e)}\r\n\t\t\t/>\r\n            <br/>\r\n            Detune: {stateProperties.detune}\r\n            <input  \r\n\t\t\t    type=\"range\" \r\n\t\t\t    name=\"detune\"\r\n\t\t\t    value={stateProperties.detune}\r\n\t\t\t    onInput={(e) => changeValues(e)}\r\n\t\t\t/>\r\n            <hr/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nOscillator.propTypes = {\r\n    stateDetails : PropTypes.object.isRequired,\r\n    fireOnUnMount : PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fireOnUnMount : ownProps.fireOnUnMount\r\n    }\r\n  }\r\n\r\nexport default connect(null, mapDispatchToProps)(Oscillator);\r\n","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\Keyboard.js",["287"],"import React, { Fragment, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    keyBindings,\r\n} from './../../../../static/keyBindings';\r\nimport Keys from './Keys';\r\nimport {\r\n    ThrowKeyboardPerformOnFunctionException\r\n} from './../../../../static/Errors';\r\n\r\nconst Keyboard = ({\r\n    anm\r\n}) => {\r\n\r\n    const bindings = useRef(keyBindings);\r\n    const [highlightedKey, changeKey] = useState('');\r\n\r\n    /**\r\n     * Handles the Key Down Event on the Div\r\n     * @param {Event} event \r\n     * @description Starts all Keyboard Delegates initialized on ANM\r\n     */\r\n    const handleKeyDown = (event) => {\r\n        const key = event.key;\r\n        console.log(`New Event Key: ${key}`);\r\n        if(key in bindings.current){\r\n            try{\r\n                anm.current.play(bindings.current[key]);\r\n            }catch(err){\r\n                ThrowKeyboardPerformOnFunctionException(err);\r\n            }\r\n        }\r\n\t};\r\n\r\n    /**\r\n     * Handles the Key Up Event on the Div\r\n     * @param {Event} event \r\n     * @description Stops all Keyboard delegates fired on ANM\r\n     */\r\n    const handleKeyUp = (event) => {\r\n        const key = event.key;\r\n        console.log(`Stop Event Key ${key}`);\r\n        if(key in bindings.current){\r\n            try{\r\n                anm.current.stop(bindings.current[key]);\r\n            }catch(err){\r\n                ThrowKeyboardPerformOnFunctionException(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"dummy\" tabIndex=\"0\" onKeyDown={ (e) => handleKeyDown(e) } onKeyUp={ (e) => handleKeyUp(e) }>\r\n                <Fragment>\r\n                    <h1>Keyboard {highlightedKey}</h1>\r\n                    <Keys inputs={{\r\n                        key : highlightedKey\r\n                    }}/>\r\n                </Fragment>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nKeyboard.propTypes = {\r\n    anm : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Keyboard;\r\n","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\Spinner.js",["288"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Spinner = props => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nSpinner.propTypes = {\r\n\r\n}\r\n\r\nexport default Spinner\r\n","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\reducers\\values.js",["289"],"import { \r\n    SET_HAS_COLD_STARTED_FALSE,\r\n    SET_HAS_COLD_STARTED_TRUE,\r\n    SET_HAS_COMPILED_FALSE,\r\n    SET_HAS_COMPILED_TRUE,\r\n    SET_HAS_VALUES_CHANGED_FALSE,\r\n    SET_HAS_VALUES_CHANGED_TRUE,\r\n    SET_SHOW_KEYBOARD_FALSE,\r\n    SET_SHOW_KEYBOARD_TRUE\r\n} from '../types'\r\n\r\nconst initialState = {\r\n    hasColdStarted : true,\r\n    showKeyboard : false,\r\n    hasValuesChanged : true,\r\n    hasCompiled: false,\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type } = action;\r\n\r\n    console.log(`Accessed ValuesReducer> Type: ${type} `); //TODO: Remove Logs\r\n\r\n    switch(type){\r\n        case SET_SHOW_KEYBOARD_TRUE:\r\n            return {\r\n                ...state,\r\n                showKeyboard : true\r\n            };\r\n        case SET_SHOW_KEYBOARD_FALSE:\r\n            return {\r\n                ...state,\r\n                showKeyboard : false\r\n            }; \r\n        case SET_HAS_VALUES_CHANGED_TRUE:\r\n            return {\r\n                ...state,\r\n                hasValuesChanged : true\r\n            };\r\n        case SET_HAS_VALUES_CHANGED_FALSE:\r\n            return {\r\n                ...state,\r\n                hasValuesChanged : false\r\n            }; \r\n        case SET_HAS_COMPILED_TRUE:\r\n            return {\r\n                ...state,\r\n                hasCompiled : true\r\n            };\r\n        case SET_HAS_COMPILED_FALSE:\r\n            return {\r\n                ...state,\r\n                hasCompiled : false\r\n            }; \r\n        case SET_HAS_COLD_STARTED_TRUE:\r\n            return {\r\n                ...state,\r\n                hasColdStarted : true\r\n            };\r\n        case SET_HAS_COLD_STARTED_FALSE:\r\n            return {\r\n                ...state,\r\n                hasColdStarted : false\r\n            }; \r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\graph\\GraphPlotter.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\audio\\Gain.js",["290"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gain = ({\r\n    stateDetails,\r\n    fireOnUnMount\r\n}) => {\r\n\r\n    const {\r\n        name,\r\n        type,\r\n        description,\r\n        properties\r\n    } = stateDetails;\r\n\r\n    const [stateProperties, changeProperties] = useState(properties);\r\n    \r\n    useEffect(() => {\r\n        return () => {\r\n            fireOnUnMount();\r\n        }\r\n    }, [fireOnUnMount])\r\n\r\n    const changeValues = (e) => {\r\n        changeProperties({\r\n            ...stateProperties,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <hr/>\r\n            Showing {name} | What is it? : {description}\r\n            Check Gain for more info: TODO: Provide Link <br/>\r\n            Frequency: {stateProperties.gain} <br/>\r\n            :Ideally Create Dumb Components and pass them the event handlers as props. \r\n            <input  \r\n\t\t\t    type=\"range\" \r\n\t\t\t    name=\"gain\"\r\n\t\t\t    value={stateProperties.gain}\r\n\t\t\t    onInput={(e) => changeValues(e)}\r\n\t\t\t/>\r\n            <br/>\r\n            Detune: {stateProperties.detune}\r\n            <input  \r\n\t\t\t    type=\"range\" \r\n\t\t\t    name=\"linearRampValueAtTime\"\r\n\t\t\t    value={stateProperties.detune}\r\n\t\t\t    onInput={(e) => changeValues(e)}\r\n\t\t\t/>\r\n            <hr/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nGain.propTypes = {\r\n    fireOnUnMount : PropTypes.func.isRequired,\r\n    stateDetails : PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fireOnUnMount : ownProps.fireOnUnMount\r\n    }\r\n  }\r\n\r\nexport default connect(null, mapDispatchToProps)(Gain);\r\n","C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\redux\\actions\\activeState.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\Keys.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\static\\keyBindings.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\InputManager.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\storage\\audio\\PlayableOscillator.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\assets\\ui\\components\\Knob.js",[],"C:\\Users\\Ayan.Choudhury\\Desktop\\Endecipher\\Synth\\synth\\src\\components\\workstation\\components\\transform\\audio\\PlayableOscillator.js",["291","292","293","294"],"import React, { Fragment, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Knob from './../../../../../assets/ui/components/Knob';\r\nimport PlayableOscillatorClass from './../../../../storage/audio/PlayableOscillator';\r\nimport {\r\n    DETUNE,\r\n    FREQUENCY,\r\n    TYPE\r\n} from './../../../../storage/Types';\r\nimport {\r\n    updateHasValuesChanged\r\n} from './../../../../../redux/actions/values';\r\n\r\nconst PlayableOscillator = ({\r\n    stateDetails,\r\n    updateHasValuesChanged\r\n}) => {\r\n\r\n    const {\r\n        name,\r\n        type,\r\n        description,\r\n        properties\r\n    } = stateDetails;\r\n\r\n    const stateProperties = useRef(properties);\r\n    \r\n    /**\r\n     * On unmount of this conditionally rendered component, we will update HasValueChanged to true.\r\n     */\r\n    useEffect(() => {\r\n        return () => {\r\n            updateHasValuesChanged(true);\r\n        }\r\n    }, [updateHasValuesChanged]);\r\n\r\n    /**\r\n     * @name eventHandler\r\n     * @description Changes the ref state properties\r\n     * The key and value obtained by the UI Controls (Like knobs) will change properties of the state.\r\n     * @param {String} key - Key\r\n     * @param {Object} value - Could be a String or a Number ocassionally. \r\n     */\r\n    const eventHandler = (key, value) => {\r\n        console.log(`Value Changed > ${key} : ${value}`);\r\n        stateProperties.current[key] = value;\r\n    }\r\n\r\n    //Dump Component = Show purposes from props\r\n    return (\r\n        <Fragment>\r\n            <hr/>\r\n            Showing {name} | What is it? : {description}\r\n            Check Playable Oscillator for more info: TODO: Provide Link <br/>\r\n            //Ideally Create Dumb Components and pass them the event handlers as props.\r\n            <br/>\r\n            <Knob \r\n                styling={\" \"} \r\n                eventHandler={eventHandler} \r\n                properties={{\r\n                    ...PlayableOscillatorClass.fetchPropertyDetails(DETUNE),\r\n                    value : stateProperties.current[DETUNE]\r\n                }} \r\n            />\r\n            <hr/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPlayableOscillator.propTypes = {\r\n    stateDetails : PropTypes.object.isRequired,\r\n    updateHasValuesChanged : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {\r\n    updateHasValuesChanged\r\n})(PlayableOscillator);\r\n",{"ruleId":"295","severity":1,"message":"296","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":12},{"ruleId":"295","severity":1,"message":"299","line":7,"column":11,"nodeType":"297","messageId":"298","endLine":7,"endColumn":23},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","severity":1,"message":"305","line":7,"column":1,"nodeType":"306","endLine":18,"endColumn":2},{"ruleId":"304","severity":1,"message":"305","line":11,"column":1,"nodeType":"306","endLine":30,"endColumn":2},{"ruleId":"295","severity":1,"message":"307","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":20},{"ruleId":"300","replacedBy":"308"},{"ruleId":"302","replacedBy":"309"},{"ruleId":"295","severity":1,"message":"310","line":3,"column":8,"nodeType":"297","messageId":"298","endLine":3,"endColumn":18},{"ruleId":"295","severity":1,"message":"311","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":20},{"ruleId":"295","severity":1,"message":"312","line":4,"column":5,"nodeType":"297","messageId":"298","endLine":4,"endColumn":44},{"ruleId":"295","severity":1,"message":"313","line":5,"column":5,"nodeType":"297","messageId":"298","endLine":5,"endColumn":41},{"ruleId":"295","severity":1,"message":"314","line":9,"column":5,"nodeType":"297","messageId":"298","endLine":9,"endColumn":17},{"ruleId":"295","severity":1,"message":"315","line":9,"column":19,"nodeType":"297","messageId":"298","endLine":9,"endColumn":28},{"ruleId":"295","severity":1,"message":"316","line":9,"column":30,"nodeType":"297","messageId":"298","endLine":9,"endColumn":34},{"ruleId":"295","severity":1,"message":"317","line":9,"column":36,"nodeType":"297","messageId":"298","endLine":9,"endColumn":41},{"ruleId":"295","severity":1,"message":"318","line":9,"column":43,"nodeType":"297","messageId":"298","endLine":9,"endColumn":61},{"ruleId":"295","severity":1,"message":"319","line":9,"column":75,"nodeType":"297","messageId":"298","endLine":9,"endColumn":85},{"ruleId":"295","severity":1,"message":"320","line":11,"column":8,"nodeType":"297","messageId":"298","endLine":11,"endColumn":19},{"ruleId":"295","severity":1,"message":"321","line":12,"column":16,"nodeType":"297","messageId":"298","endLine":12,"endColumn":22},{"ruleId":"295","severity":1,"message":"310","line":13,"column":8,"nodeType":"297","messageId":"298","endLine":13,"endColumn":18},{"ruleId":"300","replacedBy":"322"},{"ruleId":"302","replacedBy":"323"},{"ruleId":"295","severity":1,"message":"314","line":3,"column":5,"nodeType":"297","messageId":"298","endLine":3,"endColumn":17},{"ruleId":"295","severity":1,"message":"315","line":3,"column":19,"nodeType":"297","messageId":"298","endLine":3,"endColumn":28},{"ruleId":"295","severity":1,"message":"317","line":3,"column":36,"nodeType":"297","messageId":"298","endLine":3,"endColumn":41},{"ruleId":"295","severity":1,"message":"318","line":3,"column":43,"nodeType":"297","messageId":"298","endLine":3,"endColumn":61},{"ruleId":"295","severity":1,"message":"319","line":3,"column":75,"nodeType":"297","messageId":"298","endLine":3,"endColumn":85},{"ruleId":"295","severity":1,"message":"320","line":9,"column":8,"nodeType":"297","messageId":"298","endLine":9,"endColumn":19},{"ruleId":"295","severity":1,"message":"313","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":46},{"ruleId":"295","severity":1,"message":"324","line":3,"column":5,"nodeType":"297","messageId":"298","endLine":3,"endColumn":15},{"ruleId":"295","severity":1,"message":"315","line":5,"column":5,"nodeType":"297","messageId":"298","endLine":5,"endColumn":14},{"ruleId":"295","severity":1,"message":"317","line":6,"column":5,"nodeType":"297","messageId":"298","endLine":6,"endColumn":10},{"ruleId":"295","severity":1,"message":"318","line":7,"column":5,"nodeType":"297","messageId":"298","endLine":7,"endColumn":23},{"ruleId":"295","severity":1,"message":"325","line":9,"column":5,"nodeType":"297","messageId":"298","endLine":9,"endColumn":17},{"ruleId":"295","severity":1,"message":"319","line":10,"column":5,"nodeType":"297","messageId":"298","endLine":10,"endColumn":15},{"ruleId":"295","severity":1,"message":"326","line":11,"column":5,"nodeType":"297","messageId":"298","endLine":11,"endColumn":13},{"ruleId":"295","severity":1,"message":"327","line":14,"column":5,"nodeType":"297","messageId":"298","endLine":14,"endColumn":20},{"ruleId":"295","severity":1,"message":"328","line":15,"column":5,"nodeType":"297","messageId":"298","endLine":15,"endColumn":19},{"ruleId":"300","replacedBy":"329"},{"ruleId":"302","replacedBy":"330"},{"ruleId":"295","severity":1,"message":"331","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":27},{"ruleId":"304","severity":1,"message":"305","line":9,"column":1,"nodeType":"306","endLine":28,"endColumn":2},{"ruleId":"295","severity":1,"message":"332","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":20,"column":8,"nodeType":"335","endLine":20,"endColumn":31,"suggestions":"336"},{"ruleId":"300","replacedBy":"337"},{"ruleId":"302","replacedBy":"338"},{"ruleId":"333","severity":1,"message":"339","line":21,"column":8,"nodeType":"335","endLine":21,"endColumn":26,"suggestions":"340"},{"ruleId":"295","severity":1,"message":"341","line":1,"column":48,"nodeType":"297","messageId":"298","endLine":1,"endColumn":54},{"ruleId":"295","severity":1,"message":"327","line":5,"column":5,"nodeType":"297","messageId":"298","endLine":5,"endColumn":20},{"ruleId":"295","severity":1,"message":"342","line":6,"column":5,"nodeType":"297","messageId":"298","endLine":6,"endColumn":18},{"ruleId":"295","severity":1,"message":"331","line":8,"column":5,"nodeType":"297","messageId":"298","endLine":8,"endColumn":22},{"ruleId":"333","severity":1,"message":"343","line":55,"column":8,"nodeType":"335","endLine":55,"endColumn":10,"suggestions":"344"},{"ruleId":"333","severity":1,"message":"345","line":78,"column":8,"nodeType":"335","endLine":78,"endColumn":27,"suggestions":"346"},{"ruleId":"295","severity":1,"message":"347","line":81,"column":28,"nodeType":"297","messageId":"298","endLine":81,"endColumn":48},{"ruleId":"295","severity":1,"message":"348","line":1,"column":27,"nodeType":"297","messageId":"298","endLine":1,"endColumn":36},{"ruleId":"295","severity":1,"message":"349","line":12,"column":9,"nodeType":"297","messageId":"298","endLine":12,"endColumn":13},{"ruleId":"350","severity":1,"message":"351","line":37,"column":69,"nodeType":"352","endLine":39,"endColumn":24},{"ruleId":"295","severity":1,"message":"353","line":16,"column":28,"nodeType":"297","messageId":"298","endLine":16,"endColumn":37},{"ruleId":"295","severity":1,"message":"332","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":17},{"ruleId":"304","severity":1,"message":"305","line":19,"column":1,"nodeType":"306","endLine":68,"endColumn":2},{"ruleId":"295","severity":1,"message":"349","line":12,"column":9,"nodeType":"297","messageId":"298","endLine":12,"endColumn":13},{"ruleId":"295","severity":1,"message":"354","line":8,"column":5,"nodeType":"297","messageId":"298","endLine":8,"endColumn":14},{"ruleId":"295","severity":1,"message":"355","line":9,"column":5,"nodeType":"297","messageId":"298","endLine":9,"endColumn":9},{"ruleId":"295","severity":1,"message":"349","line":22,"column":9,"nodeType":"297","messageId":"298","endLine":22,"endColumn":13},{"ruleId":"350","severity":1,"message":"351","line":55,"column":78,"nodeType":"352","endLine":57,"endColumn":13},"no-unused-vars","'Knob' is defined but never used.","Identifier","unusedVar","'eventHandler' is assigned a value but never used.","no-native-reassign",["356"],"no-negated-in-lhs",["357"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'InputManager' is defined but never used.",["356"],["357"],"'EntityNode' is defined but never used.","'AudioWrapper' is defined but never used.","'ThrowScrambledCompilationOrderException' is defined but never used.","'ThrowUnidentifiedFXChainKeyException' is defined but never used.","'BIQUADFILTER' is defined but never used.","'CONVOLVER' is defined but never used.","'GAIN' is defined but never used.","'DELAY' is defined but never used.","'DYNAMICSCOMPRESSOR' is defined but never used.","'WAVESHAPER' is defined but never used.","'BaseContext' is defined but never used.","'uuidv4' is defined but never used.",["356"],["357"],"'OSCILLATOR' is defined but never used.","'STEREOPANNER' is defined but never used.","'ANALYSER' is defined but never used.","'OSC_TYPE_SQUARE' is defined but never used.","'LFO_OSCILLATOR' is defined but never used.",["356"],["357"],"'OSC_TYPE_SAWTOOTH' is defined but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStateDetails' and 'updateHasValuesChanged'. Either include them or remove the dependency array. If 'updateHasValuesChanged' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["358"],["356"],["357"],"React Hook useEffect has missing dependencies: 'adjacencyList', 'compile', and 'nodeStructure'. Either include them or remove the dependency array. If 'compile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["359"],"'useRef' is defined but never used.","'OSC_TYPE_SINE' is defined but never used.","React Hook useEffect has missing dependencies: 'NodeUUID.UniqueId', 'audioNodeManager', 'changeUniqueId', and 'key'. Either include them or remove the dependency array.",["360"],"React Hook useEffect has missing dependencies: 'NodeUUID', 'audioNodeManager', and 'key'. Either include them or remove the dependency array.",["361"],"'changeOscillatorType' is assigned a value but never used.","'useEffect' is defined but never used.","'type' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'changeKey' is assigned a value but never used.","'FREQUENCY' is defined but never used.","'TYPE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [activeStateDetails, anm, hasValuesChanged, updateHasValuesChanged]",{"range":"370","text":"371"},"Update the dependencies array to be: [adjacencyList, anm, compile, hasCompiled, nodeStructure]",{"range":"372","text":"373"},"Update the dependencies array to be: [NodeUUID.UniqueId, audioNodeManager, changeUniqueId, key]",{"range":"374","text":"375"},"Update the dependencies array to be: [toggle, frequency, NodeUUID, key, audioNodeManager]",{"range":"376","text":"377"},[521,544],"[activeStateDetails, anm, hasValuesChanged, updateHasValuesChanged]",[553,571],"[adjacencyList, anm, compile, hasCompiled, nodeStructure]",[1799,1801],"[NodeUUID.UniqueId, audioNodeManager, changeUniqueId, key]",[2737,2756],"[toggle, frequency, NodeUUID, key, audioNodeManager]"]